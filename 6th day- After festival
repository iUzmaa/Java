Write an infinite loop using do while condition.
class HelloWorld {

  public static void main(String args[]) {
    do {
      System.out.println("Hello World");
    } while (false);
  }
}

Write a program to enter the numbers till the user wants and at the end it should display the count of positive, negative and zeros entered.

import java.util.*;
class HelloWorld
{
  public static void main(String args[])
  {
  int p=0; int n=0; int z=0;
  System.out.println("Enter 1 to continue and 0 to stop;");
  Scanner sc=new Scanner(System.in);
  int input=sc.nextInt();
  while(input==1)
  {
    System.out.println("Enter Number");
    int num=sc.nextInt();
    if(num>0)
    {
      p++;
    }
    else if(num<0)
    {
      n++;
    }
    else
    {
      z++;
    }
    System.out.println("Enter 1 to continue 0 to stop:");
    input=sc.nextInt();
    
  }
  System.out.println("Positives are"+p);
  System.out.println("Negatives are"+n);
  System.out.println("Zeroes are"+z);
}
}


Two numbers are entered by the user, x and n. Write a function to find the value of one number raised to the power of another i.e. xn.
import java.util.*;
class HelloWorld
{
  public static void main(String args[])
  {
  int x;int y;
  Scanner sc = new Scanner(System.in);
  System.out.println("Enter The Number First");
  x = sc.nextInt();
  System.out.println("Enter The Second Number");
  y = sc.nextInt();
  int r=1;
  for(int i=0;i<y;i++)
  {
    r=r*x;
  }
  System.out.println("Result is:"+r);

  }
}
Write a function that calculates the Greatest Common Divisor of 2 numbers. 
import java.util.*;


public class Solutions {
   public static void main(String args[]) {
       Scanner sc = new Scanner(System.in);
       int n1 = sc.nextInt();
       int n2 = sc.nextInt();


       while(n1 != n2) { 
           if(n1>n2) {
               n1 = n1 - n2;
           } else {
               n2 = n2 - n1;
           }
       }
       System.out.println("GCD is : "+ n2);
   }   
}
Write a program to print Fibonacci series of n terms where n is input by user :
0 1 1 2 3 5 8 13 21 ..... 
In the Fibonacci series, a number is the sum of the previous 2 numbers that came before it.

import java.util.*;


public class Solutions {
   public static void main(String args[]) {
       Scanner sc = new Scanner(System.in);
       int n = sc.nextInt();
      
       int a = 0, b = 1;
          
       System.out.print(a+" ");
      
       if(n > 1) {
           //find nth term
           for(int i=2; i<=n; i++) {
               System.out.print(b+" ");
               //the concept below is called swapping
               int temp = b;
               b = a + b;
               a = temp;
           }


           System.out.println();
       }
   }   
}
